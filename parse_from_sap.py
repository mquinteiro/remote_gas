# load csv separated by | file into sql server tables canalizados and telemedidas.
# csv file is generated by sap ant it is in the credentials.py file as sap_csv_file

from curses.ascii import isalnum
from ntpath import join
from cep_credentials import con_string, sap_csv_file
from time import sleep
from datetime import datetime
import pyodbc
import os
import csv

from generate_sap_linux import linux_connect


# for telemedidas (NSerial, CodigoSAPTel, CCanalizado, Telefono, Deposito1, Cod' +
#        'Dep1, Volumen1, Deposito2, CodDep2, Volumen2, Deposito3, CodDep3' +
#        ', Volumen3, Status)

fields_in_Telemedidas = ['NSerial', 'CodigoSAPTel', 'CCanalizado', 'Telefono', 'Deposito1', 'CodDep1', 'Volumen1',
                         'Deposito2', 'CodDep2', 'Volumen2', 'Deposito3', 'CodDep3', 'Volumen3', 'Status']
fields_in_Telemedidas = ['NSerial', 'CodigoSAPTel', 'CCanalizado', 'Telefono']
fields_for_Telemedidas = fields_in_Telemedidas

# field for Canalizados  (Codigo, Nombre, Localidad, CodPostal, Agencia, Transportista, Mantenedor, Status)
fields_in_Canalizados = ['Codigo', 'Nombre', 'Localidad', 'CodPostal', 'Agencia', 'Transportista', 'Mantenedor',
                          'Status']
fields_for_Canalizados = ['CCanalizado', 'Nombre', 'Localidad', 'CodPostal', 'Agencia', 'Transportista', 'Mantenedor', 'Status']

def loadCSVFile(filename):
    f = open(filename, 'r', encoding='ISO-8859-1')
    field_names = ['NSerial', 'Telefono', 'CodigoSAPTel', 'CCanalizado', 'Nombre', 'Localidad', 'CodPostal', 'Agencia', 
        'Transportista', 'Mantenedor', 'Status', 'E1', 'CodDep1', 'Volumen1', 'Deposito1', 
        'CodDep2', 'Volumen2', 'Deposito2', 'CodDep3', 'Volumen3', 'Deposito3']
    
    reader = csv.DictReader(f, field_names,delimiter='|', )
    data = {}
    for row in reader:
        if row['Deposito3'] is None:
            print("Error in row: ", row['NSerial'])
            continue
        data[row['NSerial']] = row
        data[row['NSerial']]['Volumen1'] = int(data[row['NSerial']]['Volumen1'].replace('.','')) if data[row['NSerial']]['Volumen1'].replace('.','').isnumeric()  else 0
        data[row['NSerial']]['Volumen2'] = int(data[row['NSerial']]['Volumen2'].replace('.','')) if data[row['NSerial']]['Volumen2'].replace('.','').isnumeric()  else 0
        data[row['NSerial']]['Volumen3'] = int(data[row['NSerial']]['Volumen3'].replace('.','')) if data[row['NSerial']]['Volumen3'].replace('.','').isnumeric()  else 0
        data[row['NSerial']]['Deposito3'] = data[row['NSerial']]['Deposito3'][:10]

    return data

def main():
    data = loadCSVFile(sap_csv_file)
    cur, con  = linux_connect()
    sql_str = 'delete from Telemedidas_SAP'
    cur.execute(sql_str)
    sql_str = 'delete from Canalizados'
    cur.execute(sql_str)
    for key in data.keys():
        sql_str = f"insert into Telemedidas_SAP ({','.join(['%s'] * len(fields_in_Telemedidas))}) values "
        sql_str += f"({','.join(['%s'] * len(fields_for_Telemedidas))})"
        fields = fields_for_Telemedidas + [data[key][field] for field in fields_for_Telemedidas]
        cur.execute(sql_str, fields)
        sql_str = f"insert into Canalizados ({','.join(['?'] * len(fields_in_Canalizados))}) values "
        sql_str += f"({','.join(['?'] * len(fields_for_Canalizados))})"
        cur.execute(sql_str, *(fields_for_Canalizados + [data[key][field] for field in fields_for_Canalizados]))
    con.commit()
        

    print(data)

if __name__ == "__main__":
    main()
